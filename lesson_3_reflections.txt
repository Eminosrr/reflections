When would you want to use a remote repository rather than keeping all your work local?
I would like to use this feature as I would like to store my scripts in a cloud and use it in different computers. It is also beneficial for group work when people use their own computer but contributing to the same project.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
If you are changing something without creating a new branch, you wouldn't want to synchronise the remote and local folder. Therefore, it is wise to pull and push changes manually in order to avoid confusions. (?)

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are used to copy someone else's GitHub repository to work on in your GitHub repo. Clone is used for online or offline copying to your local repository. Branch is to make local experiments in your own machine.

What is the benefit of having a copy of the last known state of the remote stored locally?
It is beneficial to compare the modified version in your local repo with the published version of the code. It can be also good to have synchronized version with the state-of-the-art.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
If you are working in the same office maybe it would be easier to call your colleague and resolve the problem right away. But if she/he is busy or in distant office using GitHub makes your collaboration a lot easier when compared to not using.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When you want to try something experimental and keep the working version of the code intact. 